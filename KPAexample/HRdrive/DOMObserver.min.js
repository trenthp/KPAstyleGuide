Namespace("Kpa.Hrm.Web",function(){window.Kpa.Hrm.Web.DOMObserver=function(n){var t={onAdded:{},onRemoved:{},onChanged:{}},r=function(n){return function(t,i){var r=/[^\s>]+$/.exec(t),u,f;if(r)r=r[0];else return;if(u=n.find(r).addBack(r),r!=t&&(u=u.filter(t)),u.length)for(f in i)typeof i[f]=="function"&&i[f].call(u.get())}},i=null;window.MutationObserver&&(i=new MutationObserver(function(i){var o=n(),s=n(),f={},h,u,e,c;for(h in i)u=i[h],o=o.add(u.addedNodes),s=s.add(u.removedNodes),u.type=="attributes"&&(e=u.attributeName,c=f[e]=f[e]||n(),f[e]=c.add(u.target));n.each(t.onAdded,r(o));n.each(t.onRemoved,r(s));n.isEmptyObject(t.onChanged)||n.each(f,function(i,u){var f={};n.each(t.onChanged,function(n,t){if(t.attributes.indexOf(i)!=-1){var r=f[n]=f[n]||[];r.push(t.handler)}});n.each(f,r(u))})}));var e={onAdded:{elements:[],lastDispatchId:null},onRemoved:{elements:[],lastDispatchId:null}},u=function(i){var f="",u;switch(i.type){case"DOMNodeInserted":f="onAdded";break;case"DOMNodeRemoved":f="onRemoved"}u=e[f];u.elements.unshift(i.target);u.lastDispatchId&&clearTimeout(u.lastDispatchId);u.lastDispatchId=setTimeout(function(t,i){return function(){u.elements=[];delete u.lastDispatchId;i=o(i);n.each(t,r(n(i)))}}(t[f],u.elements),0)},o=function(t){var i=[];return n.each(t,function(r,u){n.inArray(u.parentNode,t,r)==-1&&i.push(u)}),i},f={initialize:function(){f.enable()},listenOnAdded:function(n,i){if(typeof n!="string")throw"A selector string must be provided to listen on node added events.";if(typeof i!="function")throw"A handler function must be provided to listen on node added events.";var r=t.onAdded[n]=t.onAdded[n]||[];r.push(i)},listenOnRemoved:function(n,i){if(typeof n!="string")throw"A selector string must be provided to listen on node removed events.";if(typeof i!="function")throw"A handler function must be provided to listen on node removed events.";var r=t.onRemoved[n]=t.onRemoved[n]||[];r.push(i)},listenOnChanged:function(n,i,r){if(typeof n!="string")throw"A selector string must be provided to listen on node changed events.";if(typeof i!="string")throw"A space delimited string of attributes to observe must be provided to listen on node changed events.";if(typeof r!="function")throw"A handler function must be provided to listen on node changed events.";var u=t.onChanged[n]=t.onChanged[n]||[];u.push({attributes:i,handler:r})},enable:function(){if(i)i.observe(document.documentElement,{childList:!0,subtree:!0});else n(document).on("DOMNodeInserted DOMNodeRemoved",u)},disable:function(){i?i.disconnect():n(document).off("DOMNodeInserted DOMNodeRemoved",u)}};return f}(jQuery)});
/*
//# sourceMappingURL=DOMObserver.min.js.map
*/